
worker_processes  4;        #nginx worker 数量
error_log logs/error.log;   #指定错误日志文件路径
events {
    worker_connections 2048;
}

#user root admin;

http{
  # 开启第三方登录授权
  add_header Access-Control-Allow-Origin *;
  add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type;
  add_header Access-Control-Allow-Methods GET,POST,OPTIONS; 
  add_header Access-Control-Expose-Headers 'WWW-Authenticate,Server-Authorization,User-Identity-Token';
  
  # ngx 类型默认映射
  include       mime.types;
  # 默认 使用 octet-stream
  default_type  application/octet-stream;
  
  # 家在多个项目的配置文件
  #include mysql.conf;
  # 设置默认 lua 搜索路径，添加 lua 路径
  lua_package_path 'lua/?.lua;lua/modules/?.lua;/usr/local/share/lua/5.1/?.lua;/Users/dongyf/dongyf/openresty/server/openresty/openresty_with_luajit/lualib/?.lua;/opt/openresty/nginx/lualib/;;';
  lua_package_cpath '/usr/local/lib/lua/5.1/?.so;;';
  # 对于开发研究，可以对代码 cache 进行关闭，这样不必每次都重新加载 nginx app envirmust set #lua_code_cache on; 
  lua_code_cache off;
  server_tokens off; 
  tcp_nopush on;
  access_log off;


  # 共享内存定义
  lua_shared_dict ngx_cache 128m;
  lua_shared_dict ngx_locks 100m;
  lua_shared_dict shm 10m;
 
  lua_shared_dict video_cache 1024m;

  #错误页面导航预定义 隐藏系统的环境
  error_page 403   /403.html;  #(Forbidden/禁止)
  error_page 400 401 402 404 405  406 407 408 /40x.html;  #Bad Request/错误请求 
  error_page 409 410 411 412 413 414 415 416 417 /40x.html; #详情见http状态
  error_page 444 /out_error.do;
  ##502 等错误可以用同样的方法来配置。  
  error_page  500 502 503 504  /50x.html; 

  #ngx.STDERR     -- 标准输出
  #ngx.EMERG      -- 紧急报错
  #ngx.ALERT      -- 报警
  #ngx.CRIT       -- 严重，系统故障，触发运维告警系统
  #ngx.ERR        -- 错误，业务不可恢复性错误
  #ngx.WARN       -- 告警，业务中可忽略错误
  #ngx.NOTICE     -- 提醒，业务比较重要信息
  #ngx.INFO       -- 信息，业务琐碎日志信息，包含不同情况判断等
  #ngx.DEBUG      -- 调试

  error_log  logs/error.log error;    # 日志级别
     
  # 采用GZIP进行传输, 加速传输
  gzip on;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  #gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/json;
  gzip_vary off;
  gzip_disable "MSIE [1-6]\.";

    #DNS解析服务器地址，用google的8.8.8.8有时候会访问不了，得益于某堵墙 
    resolver 114.114.114.114 8.8.8.8 1.1.1.1; 

    # lua 初始化脚本
    init_by_lua_file lua/server/nginx_init_by_lua.lua;
    
    # 单个work对象的初始化
    init_worker_by_lua_file lua/server/init_worker_by_lua.lua; 

    # 配置后端代理服务 
    upstream tomcat{ 
      server 47.96.153.251:8080 weight=5 max_fails=3;  
      # 最大长连数 
      keepalive 32; 
    }
 




    # http/1.0默认是关闭长连接的，需要添加HTTP请求头“Connection:Keep-Alive”才能启用。
    # 而http/1.1默认启用长连接，需要添加HTTP请求头“Connection: close”才关闭。

    #    # 把http的请求强制转到https的话：
    #    server {
    #        listen      80;
    #        server_name example.me;
    #        rewrite     ^   https://$server_name$request_uri? permanent;
    #        ### 使用return的效率会更高 
    #        #  return 301 https://$server_name$request_uri;
    #    } 

    client_max_body_size 64M; #多少M根据实际情况填写
     
    
   # Connection:Keep-Alive;
    server {
        #监听端口，若你的6677端口已经被占用，则需要修改
        listen 80;  
        server_name localhost;

        #默认session的失效时间和cookie的失效时间一样
        #session.expires = time() + session.cookie.lifetime
        set $session_storage redis;
        set $session_redis_prefix        sessions;
        set $session_secret            623q4hR325t36VsCD3g567922IC0073T;
        set $session_redis_socket        unix:///tmp/redis.sock;
        set $session_redis_host          127.0.0.1;
        set $session_redis_port          6379;
        #set $session_cookie_persistent  on;

        #auth_basic "test_auth";
        #auth_basic_user_file auth_user;

        location / {
          #default_type text/html;
          # 指定对应uri的资源查找路径，这里html为相对路径，完整路径
          root  html; 
          default_type "text/html; charset=utf-8"; 
          index          index.shtml index.html index.htm;
        } 
        
        # location = /foo {
        #     set $value 'first';
        #     redis2_query set one $value;
        #     redis2_pass redis_cluster;
        # }

         # GET /get?key=some_key&func=get
        # location = /getfoo {
        #     set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
        #     set_unescape_uri $func $arg_func;
        #     redis2_query get $key;
        #     echo $func;
        #     redis2_pass redis_cluster;
        # }

        #lua_need_request_body on;
        location ~/ffmpeg/upload_video.ffmpeg {  
          client_body_buffer_size 1M;
          client_max_body_size 64M;
          content_by_lua_file lua/modules/ffmpeg/upload_video.lua; 
        }

        location ~ /files/myfiles.png { 
            #default_type application/text/html;
            #access_by_lua_file  lua/auth/token_auth.lua;
            # default_type  image/png;
            content_by_lua_file lua/modules/files/myfiles.lua;  
            # log_by_lua_file lua/modules/logs/log.lua;
        }
        
        location ~ /files/mp4test.mp4 { 
            #default_type application/text/html;
            #access_by_lua_file  lua/auth/token_auth.lua;
            default_type  video/mp4;
            content_by_lua_file lua/modules/files/mp4test.lua;  
            # log_by_lua_file lua/modules/logs/log.lua;
        } 

        location ~ /game/machine/api/image_pre.jpg { 
            #default_type application/text/html;  
            default_type  image/jpg;
            content_by_lua_file lua/modules/game/machine/api/image_pre.lua;  
            # log_by_lua_file lua/modules/logs/log.lua;
        }
        # 默认的api访问
        location ~ ^/com_zhengsu_manager/([-_a-zA-Z0-9/.]+) {  
                #             # proxy_cache one;
                #proxy_cache_valid  200 302  1h;
                #proxy_cache_valid  404      1m;
                # proxy_redirect https://www.google.com/ /;
                # proxy_cookie_domain google.com fedora.hk;
                proxy_pass              http://tomcat;
                proxy_next_upstream http_500 http_502 http_503 error timeout invalid_header;
                #proxy_set_header Host "www.legend8888.com";
                proxy_set_header Accept-Encoding "";
                proxy_set_header User-Agent $http_user_agent;
                proxy_set_header Accept-Language "zh-CN"; 
        }

        # 默认的api访问
         location ~ ^/admin/([-_a-zA-Z0-9/.]+)/([-_a-zA-Z0-9.]+)/([-_a-zA-Z0-9.]+).action$ {  
                 #set $session_storage shm;
                    set $session_cookie_renew      1200;
                    set $session_cookie_lifetime   7200;
                  set $mpath "admin/$1";
                  set $clazz $2;
                  set $action $3;
                  set $serverType 1;  # api 服务
                  default_type "application/json; charset=utf-8";
                  #access_by_lua_file  lua/modules/admin/auth/token_auth.lua; 
                  content_by_lua_file lua/modules/dispatch.lua;  
                  log_by_lua_file lua/modules/logs/log.lua;
              }

         # 默认的api访问
         location ~ ^/admin/([-_a-zA-Z0-9/.]+).do$ {  
                 #   set $session_storage shm;
                    set $session_cookie_renew      1200;
                    set $session_cookie_lifetime   7200;
                  set $serverType 1;  # api 服务 
                  access_by_lua_file  lua/modules/admin/auth/token_auth.lua;
                  client_max_body_size 1m; #多少M根据实际情况填写
                  client_body_buffer_size 1m; #多少M根据实际情况填写
                  default_type "application/json; charset=utf-8";
                  content_by_lua_file lua/modules/admin/$1.lua;  
                  log_by_lua_file lua/modules/logs/log.lua;
              }

          # admin的html访问
          location ~ ^/admin/([-_a-zA-Z0-9/]+).shtml$ {  

                  #  set $session_storage shm;
                    set $session_cookie_renew      1200;
                    set $session_cookie_lifetime   7200;

                  set $mpath $1;
                  set $clazz $2;
                  set $action $3;
                  set $serverType 2;  # api 服务
                  #rewrite_by_lua_file lua/common/file_redirect.lua; 
                  default_type "text/html; charset=utf-8";
                  root html/;
                  access_by_lua_file  lua/modules/admin/auth/token_auth.lua;
                  content_by_lua_file lua/modules/admin/$1.lua;
                  log_by_lua_file lua/modules/logs/log.lua;
              }


         # 默认的api访问
         location ~ ^/([-_a-zA-Z0-9/.]+).do$ {  
                  if ($request_method = 'OPTIONS') { 
                      add_header Access-Control-Allow-Origin *; 
                      add_header Access-Control-Allow-Credentials true; 
                      add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS'; 
                      add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type'; 
                      return 200; 
                  }

                  set $serverType 1;  # api 服务 
                  #access_by_lua_file  lua/auth/token_auth.lua;
                  client_max_body_size 1m; #多少M根据实际情况填写
                  client_body_buffer_size 1m; #多少M根据实际情况填写
                  default_type "application/json; charset=utf-8";
                  content_by_lua_file lua/modules/$1.lua;  
                  log_by_lua_file lua/modules/logs/log.lua;
              }

 
         # 默认的api访问
         location ~ ^/([-_a-zA-Z0-9/.]+)/([-_a-zA-Z0-9.]+)/([-_a-zA-Z0-9.]+).action$ {  

                  if ($request_method = 'OPTIONS') { 
                  add_header Access-Control-Allow-Origin *; 
                  add_header Access-Control-Allow-Credentials true; 
                  add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS'; 
                  add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type'; 
                  return 200; 
                  }

                  set $mpath $1;
                  set $clazz $2;
                  set $action $3;
                  set $serverType 2;  # api 服务
                  default_type "application/json; charset=utf-8";
                  access_by_lua_file  lua/auth/token_auth.lua; 
                  content_by_lua_file lua/modules/dispatch.lua;  
                  log_by_lua_file lua/modules/logs/log.lua;
              }

        # 默认的html访问
          location ~ ^/([-_a-zA-Z0-9/]+).shtml$ { 
                  if ($request_method = 'OPTIONS') { 
                      add_header Access-Control-Allow-Origin *; 
                      add_header Access-Control-Allow-Credentials true; 
                      add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS'; 
                      add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type'; 
                      return 200; 
                  }


                  set $mpath $1;
                  set $clazz $2;
                  set $action $3;
                  set $serverType 3;  # api 服务
                  #rewrite_by_lua_file lua/common/file_redirect.lua; 
                  default_type "text/html; charset=utf-8";
                  root html/;
                  access_by_lua_file  lua/auth/web_auth.lua;
                  content_by_lua_file lua/modules/$1.lua;
                  log_by_lua_file lua/modules/logs/log.lua;
              }

        # 默认的资源文件导向
          location ~ ^/([-_a-zA-Z0-9/.]+).(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|ttf|woff|woff2)$  {
                 
                  root html/; 
              }
              
        # 默认没有结尾的导航,默认导航到index.shtml目录下
          location ~ ^/([-_a-zA-Z0-9/]+)/  {
                  #rewrite_by_lua_file lua/common/file_redirect.lua;
                  #default_type application/xhtml+xml;
                  root html/; 
                  index  index.shtml index.html index.htm;
              }

        # 带版本的静态化导航
          location ~ ^/([-_a-zA-Z0-9/.]+).(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|ttf|woff|woff2)([-_a-zA-Z0-9/.]+)  {
                  #rewrite_by_lua_file lua/common/file_redirect.lua;
                  #default_type application/xhtml+xml;
                  root html/; 
              } 


              #如果内部访问接口约定 该接口只可以内部接口访问
        location ~ ^/([-_a-zA-Z0-9/.]+).internal$ {  
                  internal;
                  #access_by_lua_file  lua/auth/token_auth.lua;
                  client_max_body_size 1m; #多少M根据实际情况填写
                  client_body_buffer_size 1m; #多少M根据实际情况填写
                  default_type "application/json; charset=utf-8";
                  content_by_lua_file lua/modules/$1.lua;  
                  log_by_lua_file lua/modules/logs/log.lua;
        }

  }

  upstream game_server{
    ip_hash;
   # sticky_cookie_insert srv_id expires=1h domain=legend8888.com path=/;
   # server 192.168.100.134:8081 max_fails=3 fail_timeout=2s;
   # server 192.168.100.136:8081 max_fails=3 fail_timeout=2s;
    server 127.0.0.1:8080 max_fails=3 fail_timeout=5s;
  }

 include vhosts/*;


}
